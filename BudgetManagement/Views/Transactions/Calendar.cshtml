
@{
    ViewData["Title"] = "Calendar Report";
}

<partial name="_Submenu" model="TransactionsSubMenu.Calendar"/>

<div id="calendario"></div>

<div class="modal fade" id="modalTransactions" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Transactions of the day</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th id="modalTablaFecha" colspan="2"></th>
                            <th id="modalTablaIngresos" class="activo"></th>
                            <th id="modalTablaGastos" class="pasivo"></th>
                        </tr>
                    </thead>
                    <tbody id="modalTablaCuerpo">
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" 
                data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/fullcalendar/main.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const calendarioEl = document.getElementById('calendario');
            const calendario = new FullCalendar.Calendar(calendarioEl, {
                dayMaxEventRows: 3,
                initialView: 'dayGridMonth',
                events: '/transactions/GetCalendarTransactions',
                dateClick: async function(info){
                    await findTransactionByDate(info.dateStr);
                }
            });

            calendario.render();
        });

        async function findTransactionByDate(date){
            const response = await
                fetch(`/transactions/GetTransactionsByDate?date=${date}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const json = await response.json();
                
                let income = 0;
                let spending = 0;
                const incomeOperationType = 1;

                const formatNumbers = new Intl.NumberFormat('en-US', {
                    style: 'currency',
                    currency: 'USD'
                });

                const filas = json.map(transactions => {
                    if(transactions.operationTypeId === incomeOperationType){
                        income += transactions.amount;
                    }
                    else{
                         spending += transactions.amount;
                    }

                    return `<tr>
                        <td>${transactions.category}</td>
                        <td>${transactions.account}</td>
                        <td align="right" colspan="2"
                            class="${transactions.operationTypeId === incomeOperationType ? 
                                'activo' : 'pasivo'}">
                                    ${formatNumbers.format(transactions.amount)}
                         </td>
                    </tr>`;
                });

                $("#modalTablaCuerpo").html(filas);
                $("#modalTablaIngresos").html(formatNumbers.format(income));
                $("#modalTablaGastos").html(formatNumbers.format(spending));
                $("#modalTablaFecha").html(date);
   
                const modalTransactions = 
                new bootstrap.Modal(document.getElementById('modalTransactions'));

                modalTransactions.show();
        }
    </script>
}