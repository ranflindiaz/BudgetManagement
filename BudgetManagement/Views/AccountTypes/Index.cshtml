@model IEnumerable<AccountType>

@{
    ViewData["Title"] = "Accounts Types";
}

<h1>Accounts Types</h1>
<h5I>It refer how can we group our accounts.</h5I>

<a asp-action="Create" class="btn btn-primary">Create New</a>

<table class="table">
    <thead>
        <tr>
            <th>Actions</th>
            <th>Name</th>
        </tr>
    </thead>
    <tbody id="reordenable">
        @foreach (var accountType in Model)
        {
            <tr>
                <td>
                    <input type="hidden" value="@accountType.Id" class="ids"/>
                    <a class="btn btn-primary" asp-action="Update" asp-route-id="@accountType.Id">Edit</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@accountType.Id">Delete</a>
                </td>
                <td>
                    @accountType.Name
                </td>

            </tr>
        }
    </tbody>
</table>

@section Scripts{
    <script>

        const urlOrganize = '@Url.Action("organize")';

        $(function(){
            $("#reordenable").sortable({
                stop: async function(e, ui){
                   await updateOrganize();
                }
            });

            async function updateOrganize (){
                const ids = getElementsIds();
                await sendIdsToBackend(ids);
            }

            function getElementsIds() {
                const ids = $('.ids').map(function(){
                    return $(this).val();
                }).get();

                return ids;
            }

            async function sendIdsToBackend(ids){
                var data = JSON.stringify(ids);

                await fetch(urlOrganize, {
                    method: 'POST',
                    body: data,
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
            }
        })
    </script>
}